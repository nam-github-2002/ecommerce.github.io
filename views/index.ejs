<!DOCTYPE html>
<html lang="vi">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title><%= title || 'Cửa hàng điện tử' %></title>
        <!-- Bootstrap 5 CSS -->
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
            rel="stylesheet" />
        <!-- Font Awesome -->
        <link
            rel="stylesheet"
            href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
        <!-- Custom CSS -->
        <link rel="stylesheet" href="/css/style.css" />
    </head>
    <body>
        <%- include('partials/header') %>

        <main id="dynamic-content" class="container mt-4"><%- body %></main>

        <%- include('partials/footer') %>

        <!-- Bootstrap 5 JS Bundle with Popper -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <!-- Custom JS -->

        <script>
            // Hàm tải nội dung bằng Fetch API
            async function loadContent(url, targetId = 'dynamic-content') {
                try {
                    const response = await fetch(url);
                    if (!response.ok) throw new Error('Network error');
                    const html = await response.text();
                    document.getElementById(targetId).innerHTML = html;

                    // Gắn lại sự kiện sau khi load nội dung mới
                    setupLoginForm();
                } catch (error) {
                    console.error('Failed to load content:', error);
                }
            }

            //Hàm kiểm tra trạng thái đăng nhập
            async function checkAuthStatus() {
                try {
                    const response = await fetch('/auth/check-status');
                    const data = await response.json();

                    if (data.isAuthenticated) {
                        updateHeader(data.user);
                    }
                } catch (error) {
                    console.error('Auth check error:', error);
                }
            }

            // Hàm cập nhật header
            function updateHeader(user) {
                const authSection =
                    document.querySelector('.col-md-6.text-end');

                if (user) {
                    authSection.innerHTML = `
                        <div class="dropdown d-inline-block">
                            <a href="#" class="text-white dropdown-toggle" id="userDropdown" data-bs-toggle="dropdown">
                                <img src="${user.avatar.url}" alt="Avatar" class="rounded-circle" width="30">
                                <span class="ms-2">${user.name}</span>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" href="/auth/me"><i class="fas fa-user me-2"></i>Hồ sơ</a></li>
                                <li><a class="dropdown-item" href="/orders"><i class="fas fa-shopping-bag me-2"></i>Đơn hàng</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="/auth/logout"><i class="fas fa-sign-out-alt me-2"></i>Đăng xuất</a></li>
                            </ul>
                        </div>
                    `;

                    // Khởi tạo lại dropdown của Bootstrap
                    new bootstrap.Dropdown(
                        document.getElementById('userDropdown')
                    );
                } else {
                    authSection.innerHTML = `
                        <a href="/auth/login" class="text-white me-3"><i class="fas fa-sign-in-alt"></i> Đăng nhập</a>
                        <a href="/auth/register" class="text-white"><i class="fas fa-user-plus"></i> Đăng ký</a>
                    `;
                }
            }

            // Hàm gắn sự kiện cho form đăng nhập
            function setupLoginForm() {
                const loginBtn = document.getElementById('loginBtn');
                console.log('setup login form');
                if (loginBtn) {
                    loginBtn.addEventListener('click', async function (e) {
                        console.log('Login button clicked!');

                        const loginForm = document.getElementById('login-form');
                        const email = loginForm.querySelector('#email').value;
                        const password =
                            loginForm.querySelector('#password').value;
                        const remember =
                            loginForm.querySelector('#remember').checked;

                        if (!email || !password) {
                            alert('Vui lòng nhập đầy đủ email và mật khẩu');
                            return;
                        }

                        try {
                            console.log('Sending request...');
                            const response = await fetch('/auth/login', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({
                                    email,
                                    password,
                                    remember,
                                }),
                            });

                            const data = await response.json();
                            console.log('Response:', data);

                            if (!data.success) {
                                alert(data.message || 'Đăng nhập thất bại');
                                return;
                            }

                            updateHeader(data.currentUser);

                            // Chuyển hướng
                            loadContent(data.redirectUrl || '/product');
                        } catch (error) {
                            console.error('Login error:', error);
                            alert('Đã xảy ra lỗi khi đăng nhập');
                        }
                    });
                }
            }

            async function loadProductList() {
                try {
                    const response = await fetch('/product/api/products');
                    const data = await response.json();

                    if (data.success) {
                        // Render danh sách sản phẩm vào container
                        renderProductList(data);
                    }
                } catch (error) {
                    console.error('Failed to load products:', error);
                }
            }

        
                // Tạo HTML cho filter form với các option selected chính xác
                const filterFormHtml = `
                    <div class="card mb-4">
                        <div class="card-header bg-primary text-white">
                            <h5 class="mb-0">Bộ lọc</h5>
                        </div>
                        <div class="card-body">
                            <form id="filter-form">
                                <div class="mb-3">
                                    <label class="form-label">Danh mục</label>
                                    <select class="form-select" name="category">
                                        <option value="">Tất cả</option>
                                        ${data.categories.map(cat => `
                                            <option value="${cat}" ${data.currentCategory === cat ? 'selected' : ''}>${cat}</option>
                                        `).join('')}
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Giá</label>
                                    <select class="form-select" name="price">
                                        <option value="">Tất cả</option>
                                        <option value="0-5000000" ${data.price === '0-5000000' ? 'selected' : ''}>Dưới 5 triệu</option>
                                        <option value="5000000-10000000" ${data.price === '5000000-10000000' ? 'selected' : ''}>5 - 10 triệu</option>
                                        <option value="10000000-20000000" ${data.price === '10000000-20000000' ? 'selected' : ''}>10 - 20 triệu</option>
                                        <option value="20000000-" ${data.price === '20000000-' ? 'selected' : ''}>Trên 20 triệu</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Đánh giá</label>
                                    <select class="form-select" name="rating">
                                        <option value="">Tất cả</option>
                                        <option value="4" ${data.rating === '4' ? 'selected' : ''}>4 sao trở lên</option>
                                        <option value="3" ${data.rating === '3' ? 'selected' : ''}>3 sao trở lên</option>
                                        <option value="2" ${data.rating === '2' ? 'selected' : ''}>2 sao trở lên</option>
                                        <option value="1" ${data.rating === '1' ? 'selected' : ''}>1 sao trở lên</option>
                                    </select>
                                </div>
                                <button type="submit" class="btn btn-primary w-100">Lọc</button>
                            </form>
                        </div>
                    </div>
                `;
            
                // Tạo HTML cho danh sách sản phẩm
                const html = `
                    <div class="row">
                        <div class="col-md-3">
                            ${filterFormHtml}
                        </div>
                        <div class="col-md-9">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h2 class="mb-0">Sản phẩm</h2>
                                <div class="sort-by">
                                    <select class="form-select" id="sort-by">
                                        <option value="createdAt" ${!data.currentSort || data.currentSort === 'createdAt' ? 'selected' : ''}>Mới nhất</option>
                                        <option value="price" ${data.currentSort === 'price' ? 'selected' : ''}>Giá: Thấp đến cao</option>
                                        <option value="-price" ${data.currentSort === '-price' ? 'selected' : ''}>Giá: Cao đến thấp</option>
                                        <option value="-ratings" ${data.currentSort === '-ratings' ? 'selected' : ''}>Đánh giá cao nhất</option>
                                    </select>
                                </div>
                            </div>
                            
                            <div class="row">
                                ${data.products.map(product => `
                                    <div class="col-md-6 col-lg-4 col-xl-3 mb-4">
                                        <div class="card h-100 product-card">
                                            <img src="${product.images[0].url}" class="card-img-top" alt="${product.name}">
                                            <div class="card-body">
                                                <h5 class="card-title">${product.name}</h5>
                                                <div class="mb-2">
                                                    ${renderRatingStars(product.ratings)}
                                                    <span class="ms-1">(${product.numOfReviews})</span>
                                                </div>
                                                <h6 class="text-danger">${product.price.toLocaleString('vi-VN')} ₫</h6>
                                            </div>
                                            <div class="card-footer bg-white border-top-0">
                                                <a href="/product/${product._id}" class="btn btn-outline-primary btn-sm">Xem chi tiết</a>
                                                <button class="btn btn-primary btn-sm ms-2 add-to-cart" data-product-id="${product._id}">
                                                    <i class="fas fa-shopping-cart"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                `).join('')}
                            </div>
                            
                            ${renderPagination(data.pagination)}
                        </div>
                    </div>
                `;
            
                document.getElementById('product-list-container').innerHTML = html;
            
                
                // Xử lý sự kiện filter form
                document.getElementById('filter-form').addEventListener('submit', function(e) {
                    e.preventDefault();
                    const formData = new FormData(this);
                    const params = new URLSearchParams(formData).toString();
                    
                    // Tải lại danh sách sản phẩm với filter mới
                    loadProductList(`?${params}`);
                });
                
                // Xử lý sự kiện sắp xếp
                document.getElementById('sort-by').addEventListener('change', function() {
                    const url = new URL(window.location.href);
                    url.searchParams.set('sort', this.value);
                    
                    // Tải lại danh sách sản phẩm với tham số sắp xếp mới
                    loadProductList(url.search);
                });
            
            // Gán sự kiện click cho các nút
            document.addEventListener('DOMContentLoaded', () => {
                checkAuthStatus();

                if (window.location.pathname === '/') {
                    loadProductList();
                }

                // Nút Đăng nhập
                document
                    .querySelector('a[href="/auth/login"]')
                    ?.addEventListener('click', (e) => {
                        e.preventDefault();

                        const currentUrl =
                            window.location.pathname + window.location.search;
                        loadContent(
                            `/auth/login?redirect=${encodeURIComponent(
                                currentUrl
                            )}`
                        );
                    });

                // Nút Đăng ký
                document
                    .querySelector('a[href="/auth/register"]')
                    ?.addEventListener('click', (e) => {
                        e.preventDefault();
                        loadContent('/auth/register');
                    });

                // Nút Sản phẩm
                document
                    .querySelector('a[href="/products"]')
                    ?.addEventListener('click', (e) => {
                        e.preventDefault();
                        loadContent('/products/list');
                    });

                // Nút Giỏ hàng
                document
                    .querySelector('a[href="/cart"]')
                    ?.addEventListener('click', (e) => {
                        e.preventDefault();
                        loadContent('/cart/checkout');
                    });

                setupLoginForm();
                checkAuthStatus()
            });
        </script>

        <script src="/js/cart.js"></script>
    </body>
</html>
